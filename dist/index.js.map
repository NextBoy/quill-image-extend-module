{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap da7eff26860f71ab9c3f","webpack:///./src/core/QuillWatch.js","webpack:///./src/core/imgHandler.js","webpack:///./src/index.js","webpack:///./src/core/ImageExtend.js","webpack:///./src/core/container.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","QuillWatch","__WEBPACK_IMPORTED_MODULE_0__imgHandler__","watcher","active","on","imageExtendId","ImageExtend","this","emit","activeId","type","arguments","length","undefined","imgHandler","fileInput","document","querySelector","createElement","setAttribute","classList","add","style","display","addEventListener","self","file","files","value","config","size","sizeError","action","uploadImg","toBase64","body","appendChild","click","__WEBPACK_IMPORTED_MODULE_0__QuillWatch__","__WEBPACK_IMPORTED_MODULE_0__core_QuillWatch__","__WEBPACK_IMPORTED_MODULE_1__core_ImageExtend__","__WEBPACK_IMPORTED_MODULE_2__core_imgHandler__","__WEBPACK_IMPORTED_MODULE_3__core_container__","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","quill","id","Math","random","imgURL","root","pasteHandle","bind","dropHandle","e","preventDefault","cursorIndex","clipboardData","items","item","types","kind","match","getAsFile","dataTransfer","reader","FileReader","onload","result","insertImg","readAsDataURL","quillLoading","formData","FormData","append","editForm","xhr","XMLHttpRequest","open","headers","change","onreadystatechange","readyState","status","res","JSON","parse","responseText","response","uploadSuccess","success","error","uploadError","upload","onloadstart","uploading","start","onprogress","complete","loaded","total","progress","onerror","onloadend","end","send","insertEmbed","update","setSelection","pro","innerHTML","replace","getSelection","index","getLength","insertText","color","container","header","list","script","indent","direction","background","font","align"],"mappings":"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","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QuillWatch; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__imgHandler__ = __webpack_require__(1);\n\n/**\r\n *@description 观察者模式 全局监听富文本编辑器\r\n */\nvar QuillWatch = {\n    watcher: {}, // 登记编辑器信息\n    active: null, // 当前触发的编辑器\n    on: function on(imageExtendId, ImageExtend) {\n        // 登记注册使用了ImageEXtend的编辑器\n        if (!this.watcher[imageExtendId]) {\n            this.watcher[imageExtendId] = ImageExtend;\n        }\n    },\n    emit: function emit(activeId) {\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        // 事件发射触发\n        this.active = this.watcher[activeId];\n        if (type === 1) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__imgHandler__[\"a\" /* imgHandler */])();\n        }\n    }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = imgHandler;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__QuillWatch__ = __webpack_require__(0);\n\n/**\r\n * @description 点击图片上传\r\n */\nfunction imgHandler() {\n    var fileInput = document.querySelector('.quill-image-input');\n    if (fileInput === null) {\n        fileInput = document.createElement('input');\n        fileInput.setAttribute('type', 'file');\n        fileInput.classList.add('quill-image-input');\n        fileInput.style.display = 'none';\n        // 监听选择文件\n        fileInput.addEventListener('change', function () {\n            var self = __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active;\n            self.file = fileInput.files[0];\n            fileInput.value = '';\n            // 如果图片限制大小\n            if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\n                if (self.config.sizeError) {\n                    self.config.sizeError();\n                }\n                return;\n            }\n            if (self.config.action) {\n                self.uploadImg();\n            } else {\n                self.toBase64();\n            }\n        });\n        document.body.appendChild(fileInput);\n    }\n    fileInput.click();\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_QuillWatch__ = __webpack_require__(0);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"QuillWatch\", function() { return __WEBPACK_IMPORTED_MODULE_0__core_QuillWatch__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_ImageExtend__ = __webpack_require__(3);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageExtend\", function() { return __WEBPACK_IMPORTED_MODULE_1__core_ImageExtend__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_imgHandler__ = __webpack_require__(1);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"imgHandler\", function() { return __WEBPACK_IMPORTED_MODULE_2__core_imgHandler__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_container__ = __webpack_require__(4);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"container\", function() { return __WEBPACK_IMPORTED_MODULE_3__core_container__[\"a\"]; });\n\n\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ImageExtend; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__QuillWatch__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n/**\r\n * @description 图片功能拓展： 增加上传 拖动 复制\r\n */\nvar ImageExtend = function () {\n    /**\r\n     * @param quill {Quill}富文本实例\r\n     * @param config {Object} options\r\n     * config  keys: action, headers, editForm start end error  size response\r\n     */\n    function ImageExtend(quill) {\n        var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, ImageExtend);\n\n        this.id = Math.random();\n        this.quill = quill;\n        this.quill.id = this.id;\n        this.config = config;\n        this.file = ''; // 要上传的图片\n        this.imgURL = ''; // 图片地址\n        quill.root.addEventListener('paste', this.pasteHandle.bind(this), false);\n        quill.root.addEventListener('drop', this.dropHandle.bind(this), false);\n        quill.root.addEventListener('dropover', function (e) {\n            e.preventDefault();\n        }, false);\n        this.cursorIndex = 0;\n        __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].on(this.id, this);\n    }\n\n    /**\r\n     * @description 粘贴\r\n     * @param e\r\n     */\n\n\n    _createClass(ImageExtend, [{\n        key: 'pasteHandle',\n        value: function pasteHandle(e) {\n            // e.preventDefault()\n            __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].emit(this.quill.id, 0);\n            var clipboardData = e.clipboardData;\n            var i = 0;\n            var items = void 0,\n                item = void 0,\n                types = void 0;\n\n            if (clipboardData) {\n                items = clipboardData.items;\n\n                if (!items) {\n                    return;\n                }\n                item = items[0];\n                types = clipboardData.types || [];\n\n                for (; i < types.length; i++) {\n                    if (types[i] === 'Files') {\n                        item = items[i];\n                        break;\n                    }\n                }\n                if (item && item.kind === 'file' && item.type.match(/^image\\//i)) {\n                    this.file = item.getAsFile();\n                    var self = this;\n                    // 如果图片限制大小\n                    if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\n                        if (self.config.sizeError) {\n                            self.config.sizeError();\n                        }\n                        return;\n                    }\n                    if (this.config.action) {\n                        // this.uploadImg()\n                    } else {\n                            // this.toBase64()\n                        }\n                }\n            }\n        }\n\n        /**\r\n         * 拖拽\r\n         * @param e\r\n         */\n\n    }, {\n        key: 'dropHandle',\n        value: function dropHandle(e) {\n            __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].emit(this.quill.id, 0);\n            var self = this;\n            e.preventDefault();\n            // 如果图片限制大小\n            if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\n                if (self.config.sizeError) {\n                    self.config.sizeError();\n                }\n                return;\n            }\n            self.file = e.dataTransfer.files[0]; // 获取到第一个上传的文件对象\n            if (this.config.action) {\n                self.uploadImg();\n            } else {\n                self.toBase64();\n            }\n        }\n\n        /**\r\n         * @description 将图片转为base4\r\n         */\n\n    }, {\n        key: 'toBase64',\n        value: function toBase64() {\n            var self = this;\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                // 返回base64\n                self.imgURL = e.target.result;\n                self.insertImg();\n            };\n            reader.readAsDataURL(self.file);\n        }\n\n        /**\r\n         * @description 上传图片到服务器\r\n         */\n\n    }, {\n        key: 'uploadImg',\n        value: function uploadImg() {\n            var self = this;\n            var quillLoading = self.quillLoading;\n            var config = self.config;\n            // 构造表单\n            var formData = new FormData();\n            formData.append(config.name, self.file);\n            // 自定义修改表单\n            if (config.editForm) {\n                config.editForm(formData);\n            }\n            // 创建ajax请求\n            var xhr = new XMLHttpRequest();\n            xhr.open('post', config.action, true);\n            // 如果有设置请求头\n            if (config.headers) {\n                config.headers(xhr);\n            }\n            if (config.change) {\n                config.change(xhr, formData);\n            }\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        //success\n                        var res = JSON.parse(xhr.responseText);\n                        self.imgURL = config.response(res);\n                        __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.uploadSuccess();\n                        self.insertImg();\n                        if (self.config.success) {\n                            self.config.success();\n                        }\n                    } else {\n                        //error\n                        if (self.config.error) {\n                            self.config.error();\n                        }\n                        __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.uploadError();\n                    }\n                }\n            };\n            // 开始上传数据\n            xhr.upload.onloadstart = function (e) {\n                __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.uploading();\n                // let length = (self.quill.getSelection() || {}).index || self.quill.getLength()\n                // self.quill.insertText(length, '[uploading...]', { 'color': 'red'}, true)\n                if (config.start) {\n                    config.start();\n                }\n            };\n            // 上传过程\n            xhr.upload.onprogress = function (e) {\n                var complete = (e.loaded / e.total * 100 | 0) + '%';\n                __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.progress(complete);\n            };\n            // 当发生网络异常的时候会触发，如果上传数据的过程还未结束\n            xhr.upload.onerror = function (e) {\n                __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.uploadError();\n                if (config.error) {\n                    config.error();\n                }\n            };\n            // 上传数据完成（成功或者失败）时会触发\n            xhr.upload.onloadend = function (e) {\n                if (config.end) {\n                    config.end();\n                }\n            };\n            xhr.send(formData);\n        }\n\n        /**\r\n         * @description 往富文本编辑器插入图片\r\n         */\n\n    }, {\n        key: 'insertImg',\n        value: function insertImg() {\n            var self = __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active;\n            self.quill.insertEmbed(__WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.cursorIndex, 'image', self.imgURL);\n            self.quill.update();\n            self.quill.setSelection(self.cursorIndex + 1);\n        }\n\n        /**\r\n         * @description 显示上传的进度\r\n         */\n\n    }, {\n        key: 'progress',\n        value: function progress(pro) {\n            pro = '[' + 'uploading' + pro + ']';\n            __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.root.innerHTML = __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, pro);\n        }\n\n        /**\r\n         * 开始上传\r\n         */\n\n    }, {\n        key: 'uploading',\n        value: function uploading() {\n            var length = (__WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.getSelection() || {}).index || __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.getLength();\n            __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.cursorIndex = length;\n            __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.insertText(__WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.cursorIndex, '[uploading...]', { 'color': 'red' }, true);\n        }\n\n        /**\r\n         * 上传失败\r\n         */\n\n    }, {\n        key: 'uploadError',\n        value: function uploadError() {\n            __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.root.innerHTML = __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '[upload error]');\n        }\n    }, {\n        key: 'uploadSuccess',\n        value: function uploadSuccess() {\n            __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.root.innerHTML = __WEBPACK_IMPORTED_MODULE_0__QuillWatch__[\"a\" /* QuillWatch */].active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '');\n        }\n    }]);\n\n    return ImageExtend;\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return container; });\n/**\r\n *@description 全部工具栏\r\n */\nvar container = [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{ 'header': 1 }, { 'header': 2 }], [{ 'list': 'ordered' }, { 'list': 'bullet' }], [{ 'script': 'sub' }, { 'script': 'super' }], [{ 'indent': '-1' }, { 'indent': '+1' }], [{ 'direction': 'rtl' }], [{ 'size': ['small', false, 'large', 'huge'] }], [{ 'header': [1, 2, 3, 4, 5, 6, false] }], [{ 'color': [] }, { 'background': [] }], [{ 'font': [] }], [{ 'align': [] }], ['clean'], ['link', 'image', 'video']];\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap da7eff26860f71ab9c3f","import {imgHandler} from './imgHandler'\r\n/**\r\n *@description 观察者模式 全局监听富文本编辑器\r\n */\r\nexport const QuillWatch = {\r\n    watcher: {},  // 登记编辑器信息\r\n    active: null,  // 当前触发的编辑器\r\n    on: function (imageExtendId, ImageExtend) {  // 登记注册使用了ImageEXtend的编辑器\r\n        if (!this.watcher[imageExtendId]) {\r\n            this.watcher[imageExtendId] = ImageExtend\r\n        }\r\n    },\r\n    emit: function (activeId, type = 1) {  // 事件发射触发\r\n        this.active = this.watcher[activeId]\r\n        if (type === 1) {\r\n            imgHandler()\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/QuillWatch.js","import {QuillWatch} from './QuillWatch'\r\n/**\r\n * @description 点击图片上传\r\n */\r\nexport function imgHandler() {\r\n    let fileInput = document.querySelector('.quill-image-input');\r\n    if (fileInput === null) {\r\n        fileInput = document.createElement('input');\r\n        fileInput.setAttribute('type', 'file');\r\n        fileInput.classList.add('quill-image-input');\r\n        fileInput.style.display = 'none'\r\n        // 监听选择文件\r\n        fileInput.addEventListener('change', function () {\r\n            let self = QuillWatch.active\r\n            self.file = fileInput.files[0]\r\n            fileInput.value = ''\r\n            // 如果图片限制大小\r\n            if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n                if (self.config.sizeError) {\r\n                    self.config.sizeError()\r\n                }\r\n                return\r\n            }\r\n            if (self.config.action) {\r\n                self.uploadImg()\r\n            } else {\r\n                self.toBase64()\r\n            }\r\n        })\r\n        document.body.appendChild(fileInput);\r\n    }\r\n    fileInput.click();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/imgHandler.js","export { QuillWatch } from './core/QuillWatch';\r\nexport { ImageExtend } from './core/ImageExtend';\r\nexport { imgHandler } from './core/imgHandler';\r\nexport { container } from './core/container';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import {QuillWatch} from './QuillWatch'\r\n/**\r\n * @description 图片功能拓展： 增加上传 拖动 复制\r\n */\r\nexport class ImageExtend {\r\n    /**\r\n     * @param quill {Quill}富文本实例\r\n     * @param config {Object} options\r\n     * config  keys: action, headers, editForm start end error  size response\r\n     */\r\n    constructor(quill, config = {}) {\r\n        this.id = Math.random()\r\n        this.quill = quill\r\n        this.quill.id = this.id\r\n        this.config = config\r\n        this.file = ''  // 要上传的图片\r\n        this.imgURL = ''  // 图片地址\r\n        quill.root.addEventListener('paste', this.pasteHandle.bind(this), false)\r\n        quill.root.addEventListener('drop', this.dropHandle.bind(this), false)\r\n        quill.root.addEventListener('dropover', function (e) {\r\n            e.preventDefault()\r\n        }, false)\r\n        this.cursorIndex = 0\r\n        QuillWatch.on(this.id, this)\r\n    }\r\n\r\n    /**\r\n     * @description 粘贴\r\n     * @param e\r\n     */\r\n    pasteHandle(e) {\r\n        // e.preventDefault()\r\n        QuillWatch.emit(this.quill.id, 0)\r\n        let clipboardData = e.clipboardData\r\n        let i = 0\r\n        let items, item, types\r\n\r\n        if (clipboardData) {\r\n            items = clipboardData.items;\r\n\r\n            if (!items) {\r\n                return;\r\n            }\r\n            item = items[0];\r\n            types = clipboardData.types || [];\r\n\r\n            for (; i < types.length; i++) {\r\n                if (types[i] === 'Files') {\r\n                    item = items[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (item && item.kind === 'file' && item.type.match(/^image\\//i)) {\r\n                this.file = item.getAsFile()\r\n                let self = this\r\n                // 如果图片限制大小\r\n                if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n                    if (self.config.sizeError) {\r\n                        self.config.sizeError()\r\n                    }\r\n                    return\r\n                }\r\n                if (this.config.action) {\r\n                    // this.uploadImg()\r\n                } else {\r\n                    // this.toBase64()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拖拽\r\n     * @param e\r\n     */\r\n    dropHandle(e) {\r\n        QuillWatch.emit(this.quill.id, 0)\r\n        const self = this\r\n        e.preventDefault()\r\n        // 如果图片限制大小\r\n        if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n            if (self.config.sizeError) {\r\n                self.config.sizeError()\r\n            }\r\n            return\r\n        }\r\n        self.file = e.dataTransfer.files[0]; // 获取到第一个上传的文件对象\r\n        if (this.config.action) {\r\n            self.uploadImg()\r\n        } else {\r\n            self.toBase64()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description 将图片转为base4\r\n     */\r\n    toBase64() {\r\n        const self = this\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            // 返回base64\r\n            self.imgURL = e.target.result\r\n            self.insertImg()\r\n        }\r\n        reader.readAsDataURL(self.file)\r\n    }\r\n\r\n    /**\r\n     * @description 上传图片到服务器\r\n     */\r\n    uploadImg() {\r\n        const self = this\r\n        let quillLoading = self.quillLoading\r\n        let config = self.config\r\n        // 构造表单\r\n        let formData = new FormData()\r\n        formData.append(config.name, self.file)\r\n        // 自定义修改表单\r\n        if (config.editForm) {\r\n            config.editForm(formData)\r\n        }\r\n        // 创建ajax请求\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('post', config.action, true)\r\n        // 如果有设置请求头\r\n        if (config.headers) {\r\n            config.headers(xhr)\r\n        }\r\n        if (config.change) {\r\n            config.change(xhr, formData)\r\n        }\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    //success\r\n                    let res = JSON.parse(xhr.responseText)\r\n                    self.imgURL = config.response(res)\r\n                    QuillWatch.active.uploadSuccess()\r\n                    self.insertImg()\r\n                    if (self.config.success) {\r\n                        self.config.success()\r\n                    }\r\n                } else {\r\n                    //error\r\n                    if (self.config.error) {\r\n                        self.config.error()\r\n                    }\r\n                    QuillWatch.active.uploadError()\r\n                }\r\n            }\r\n        }\r\n        // 开始上传数据\r\n        xhr.upload.onloadstart = function (e) {\r\n            QuillWatch.active.uploading()\r\n            // let length = (self.quill.getSelection() || {}).index || self.quill.getLength()\r\n            // self.quill.insertText(length, '[uploading...]', { 'color': 'red'}, true)\r\n            if (config.start) {\r\n                config.start()\r\n            }\r\n        }\r\n        // 上传过程\r\n        xhr.upload.onprogress = function (e) {\r\n            let complete = (e.loaded / e.total * 100 | 0) + '%'\r\n            QuillWatch.active.progress(complete)\r\n        }\r\n        // 当发生网络异常的时候会触发，如果上传数据的过程还未结束\r\n        xhr.upload.onerror = function (e) {\r\n            QuillWatch.active.uploadError()\r\n            if (config.error) {\r\n                config.error()\r\n            }\r\n        }\r\n        // 上传数据完成（成功或者失败）时会触发\r\n        xhr.upload.onloadend = function (e) {\r\n            if (config.end) {\r\n                config.end()\r\n            }\r\n        }\r\n        xhr.send(formData)\r\n    }\r\n\r\n    /**\r\n     * @description 往富文本编辑器插入图片\r\n     */\r\n    insertImg() {\r\n        const self = QuillWatch.active\r\n        self.quill.insertEmbed(QuillWatch.active.cursorIndex, 'image', self.imgURL)\r\n        self.quill.update()\r\n        self.quill.setSelection(self.cursorIndex+1);\r\n    }\r\n\r\n    /**\r\n     * @description 显示上传的进度\r\n     */\r\n    progress(pro) {\r\n        pro = '[' + 'uploading' + pro + ']'\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, pro)\r\n    }\r\n\r\n    /**\r\n     * 开始上传\r\n     */\r\n    uploading() {\r\n        let length = (QuillWatch.active.quill.getSelection() || {}).index || QuillWatch.active.quill.getLength()\r\n        QuillWatch.active.cursorIndex = length\r\n        QuillWatch.active.quill.insertText(QuillWatch.active.cursorIndex, '[uploading...]', {'color': 'red'}, true)\r\n    }\r\n\r\n    /**\r\n     * 上传失败\r\n     */\r\n    uploadError() {\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '[upload error]')\r\n    }\r\n\r\n    uploadSuccess() {\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '')\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/ImageExtend.js","/**\r\n *@description 全部工具栏\r\n */\r\nexport const container = [\r\n    ['bold', 'italic', 'underline', 'strike'],\r\n    ['blockquote', 'code-block'],\r\n    [{'header': 1}, {'header': 2}],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}],\r\n    [{'script': 'sub'}, {'script': 'super'}],\r\n    [{'indent': '-1'}, {'indent': '+1'}],\r\n    [{'direction': 'rtl'}],\r\n    [{'size': ['small', false, 'large', 'huge']}],\r\n    [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n    [{'color': []}, {'background': []}],\r\n    [{'font': []}],\r\n    [{'align': []}],\r\n    ['clean'],\r\n    ['link', 'image', 'video']\r\n]\n\n\n// WEBPACK FOOTER //\n// ./src/core/container.js"],"sourceRoot":""}