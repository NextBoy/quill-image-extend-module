{"version":3,"sources":["webpack://quillImageExtendModule/webpack/universalModuleDefinition","webpack://quillImageExtendModule/webpack/bootstrap","webpack://quillImageExtendModule/./src/core/imgHandler.js","webpack://quillImageExtendModule/./src/core/QuillWatch.js","webpack://quillImageExtendModule/./src/core/ImageExtend.js","webpack://quillImageExtendModule/./src/core/container.js","webpack://quillImageExtendModule/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","imgHandler","fileInput","document","querySelector","createElement","setAttribute","classList","add","style","display","addEventListener","self","QuillWatch","active","file","files","config","size","sizeError","action","uploadImg","toBase64","body","appendChild","click","watcher","on","imageExtendId","ImageExtend","this","emit","activeId","type","arguments","length","undefined","quill","_classCallCheck","id","Math","random","imgURL","pasteHandle","dropHandle","e","preventDefault","cursorIndex","_createClass","items","item","types","clipboardData","kind","match","getAsFile","dataTransfer","reader","FileReader","onload","target","result","insertImg","readAsDataURL","quillLoading","formData","FormData","append","editForm","xhr","XMLHttpRequest","open","headers","change","onreadystatechange","readyState","status","res","JSON","parse","responseText","response","uploadSuccess","success","error","uploadError","upload","onloadstart","uploading","start","onprogress","complete","loaded","total","progress","onerror","onloadend","end","send","insertEmbed","update","setSelection","pro","innerHTML","replace","getSelection","index","getLength","insertText","color","container","header","list","script","indent","direction","background","font","align","__webpack_exports__","ImageExtend_ImageExtend"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"quillImageExtendModule\"] = factory();\n\telse\n\t\troot[\"quillImageExtendModule\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {QuillWatch} from './QuillWatch'\r\n/**\r\n * @description 点击图片上传\r\n */\r\nexport function imgHandler() {\r\n    let fileInput = document.querySelector('.quill-image-input');\r\n    if (fileInput === null) {\r\n        fileInput = document.createElement('input');\r\n        fileInput.setAttribute('type', 'file');\r\n        fileInput.classList.add('quill-image-input');\r\n        fileInput.style.display = 'none'\r\n        // 监听选择文件\r\n        fileInput.addEventListener('change', function () {\r\n            let self = QuillWatch.active\r\n            self.file = fileInput.files[0]\r\n            fileInput.value = ''\r\n            // 如果图片限制大小\r\n            if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n                if (self.config.sizeError) {\r\n                    self.config.sizeError()\r\n                }\r\n                return\r\n            }\r\n            if (self.config.action) {\r\n                self.uploadImg()\r\n            } else {\r\n                self.toBase64()\r\n            }\r\n        })\r\n        document.body.appendChild(fileInput);\r\n    }\r\n    fileInput.click();\r\n}","import {imgHandler} from './imgHandler'\r\n/**\r\n *@description 观察者模式 全局监听富文本编辑器\r\n */\r\nexport const QuillWatch = {\r\n    watcher: {},  // 登记编辑器信息\r\n    active: null,  // 当前触发的编辑器\r\n    on: function (imageExtendId, ImageExtend) {  // 登记注册使用了ImageEXtend的编辑器\r\n        if (!this.watcher[imageExtendId]) {\r\n            this.watcher[imageExtendId] = ImageExtend\r\n        }\r\n    },\r\n    emit: function (activeId, type = 1) {  // 事件发射触发\r\n        this.active = this.watcher[activeId]\r\n        if (type === 1) {\r\n            imgHandler()\r\n        }\r\n    }\r\n}","import {QuillWatch} from './QuillWatch'\r\n/**\r\n * @description 图片功能拓展： 增加上传 拖动 复制\r\n */\r\nexport class ImageExtend {\r\n    /**\r\n     * @param quill {Quill}富文本实例\r\n     * @param config {Object} options\r\n     * config  keys: action, headers, editForm start end error  size response\r\n     */\r\n    constructor(quill, config = {}) {\r\n        this.id = Math.random()\r\n        this.quill = quill\r\n        this.quill.id = this.id\r\n        this.config = config\r\n        this.file = ''  // 要上传的图片\r\n        this.imgURL = ''  // 图片地址\r\n        quill.root.addEventListener('paste', this.pasteHandle.bind(this), false)\r\n        quill.root.addEventListener('drop', this.dropHandle.bind(this), false)\r\n        quill.root.addEventListener('dropover', function (e) {\r\n            e.preventDefault()\r\n        }, false)\r\n        this.cursorIndex = 0\r\n        QuillWatch.on(this.id, this)\r\n    }\r\n\r\n    /**\r\n     * @description 粘贴\r\n     * @param e\r\n     */\r\n    pasteHandle(e) {\r\n        // e.preventDefault()\r\n        QuillWatch.emit(this.quill.id, 0)\r\n        let clipboardData = e.clipboardData\r\n        let i = 0\r\n        let items, item, types\r\n\r\n        if (clipboardData) {\r\n            items = clipboardData.items;\r\n\r\n            if (!items) {\r\n                return;\r\n            }\r\n            item = items[0];\r\n            types = clipboardData.types || [];\r\n\r\n            for (; i < types.length; i++) {\r\n                if (types[i] === 'Files') {\r\n                    item = items[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (item && item.kind === 'file' && item.type.match(/^image\\//i)) {\r\n                this.file = item.getAsFile()\r\n                let self = this\r\n                // 如果图片限制大小\r\n                if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n                    if (self.config.sizeError) {\r\n                        self.config.sizeError()\r\n                    }\r\n                    return\r\n                }\r\n                if (this.config.action) {\r\n                    // this.uploadImg()\r\n                } else {\r\n                    // this.toBase64()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拖拽\r\n     * @param e\r\n     */\r\n    dropHandle(e) {\r\n        QuillWatch.emit(this.quill.id, 0)\r\n        const self = this\r\n        e.preventDefault()\r\n        // 如果图片限制大小\r\n        if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\r\n            if (self.config.sizeError) {\r\n                self.config.sizeError()\r\n            }\r\n            return\r\n        }\r\n        self.file = e.dataTransfer.files[0]; // 获取到第一个上传的文件对象\r\n        if (this.config.action) {\r\n            self.uploadImg()\r\n        } else {\r\n            self.toBase64()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description 将图片转为base4\r\n     */\r\n    toBase64() {\r\n        const self = this\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            // 返回base64\r\n            self.imgURL = e.target.result\r\n            self.insertImg()\r\n        }\r\n        reader.readAsDataURL(self.file)\r\n    }\r\n\r\n    /**\r\n     * @description 上传图片到服务器\r\n     */\r\n    uploadImg() {\r\n        const self = this\r\n        let quillLoading = self.quillLoading\r\n        let config = self.config\r\n        // 构造表单\r\n        let formData = new FormData()\r\n        formData.append(config.name, self.file)\r\n        // 自定义修改表单\r\n        if (config.editForm) {\r\n            config.editForm(formData)\r\n        }\r\n        // 创建ajax请求\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('post', config.action, true)\r\n        // 如果有设置请求头\r\n        if (config.headers) {\r\n            config.headers(xhr)\r\n        }\r\n        if (config.change) {\r\n            config.change(xhr, formData)\r\n        }\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    //success\r\n                    let res = JSON.parse(xhr.responseText)\r\n                    self.imgURL = config.response(res)\r\n                    QuillWatch.active.uploadSuccess()\r\n                    self.insertImg()\r\n                    if (self.config.success) {\r\n                        self.config.success()\r\n                    }\r\n                } else {\r\n                    //error\r\n                    if (self.config.error) {\r\n                        self.config.error()\r\n                    }\r\n                    QuillWatch.active.uploadError()\r\n                }\r\n            }\r\n        }\r\n        // 开始上传数据\r\n        xhr.upload.onloadstart = function (e) {\r\n            QuillWatch.active.uploading()\r\n            // let length = (self.quill.getSelection() || {}).index || self.quill.getLength()\r\n            // self.quill.insertText(length, '[uploading...]', { 'color': 'red'}, true)\r\n            if (config.start) {\r\n                config.start()\r\n            }\r\n        }\r\n        // 上传过程\r\n        xhr.upload.onprogress = function (e) {\r\n            let complete = (e.loaded / e.total * 100 | 0) + '%'\r\n            QuillWatch.active.progress(complete)\r\n        }\r\n        // 当发生网络异常的时候会触发，如果上传数据的过程还未结束\r\n        xhr.upload.onerror = function (e) {\r\n            QuillWatch.active.uploadError()\r\n            if (config.error) {\r\n                config.error()\r\n            }\r\n        }\r\n        // 上传数据完成（成功或者失败）时会触发\r\n        xhr.upload.onloadend = function (e) {\r\n            if (config.end) {\r\n                config.end()\r\n            }\r\n        }\r\n        xhr.send(formData)\r\n    }\r\n\r\n    /**\r\n     * @description 往富文本编辑器插入图片\r\n     */\r\n    insertImg() {\r\n        const self = QuillWatch.active\r\n        self.quill.insertEmbed(QuillWatch.active.cursorIndex, 'image', self.imgURL)\r\n        self.quill.update()\r\n        self.quill.setSelection(self.cursorIndex+1);\r\n    }\r\n\r\n    /**\r\n     * @description 显示上传的进度\r\n     */\r\n    progress(pro) {\r\n        pro = '[' + 'uploading' + pro + ']'\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, pro)\r\n    }\r\n\r\n    /**\r\n     * 开始上传\r\n     */\r\n    uploading() {\r\n        let length = (QuillWatch.active.quill.getSelection() || {}).index || QuillWatch.active.quill.getLength()\r\n        QuillWatch.active.cursorIndex = length\r\n        QuillWatch.active.quill.insertText(QuillWatch.active.cursorIndex, '[uploading...]', {'color': 'red'}, true)\r\n    }\r\n\r\n    /**\r\n     * 上传失败\r\n     */\r\n    uploadError() {\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '[upload error]')\r\n    }\r\n\r\n    uploadSuccess() {\r\n        QuillWatch.active.quill.root.innerHTML\r\n            = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, '')\r\n    }\r\n}\r\n\r\n","/**\r\n *@description 全部工具栏\r\n */\r\nexport const container = [\r\n    ['bold', 'italic', 'underline', 'strike'],\r\n    ['blockquote', 'code-block'],\r\n    [{'header': 1}, {'header': 2}],\r\n    [{'list': 'ordered'}, {'list': 'bullet'}],\r\n    [{'script': 'sub'}, {'script': 'super'}],\r\n    [{'indent': '-1'}, {'indent': '+1'}],\r\n    [{'direction': 'rtl'}],\r\n    [{'size': ['small', false, 'large', 'huge']}],\r\n    [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n    [{'color': []}, {'background': []}],\r\n    [{'font': []}],\r\n    [{'align': []}],\r\n    ['clean'],\r\n    ['link', 'image', 'video']\r\n]","export { QuillWatch } from './core/QuillWatch';\r\nexport { ImageExtend } from './core/ImageExtend';\r\nexport { imgHandler } from './core/imgHandler';\r\nexport { container } from './core/container';\r\n"],"sourceRoot":""}